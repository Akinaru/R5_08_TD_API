// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TD1.Models.EntityFramework;

#nullable disable

namespace TD1.Migrations
{
    [DbContext(typeof(ProdDBContext))]
    [Migration("20241016061327_CreationBD")]
    partial class CreationBD
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TD1.Models.EntityFramework.Marque", b =>
                {
                    b.Property<int>("idMarque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idmarque");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idMarque"));

                    b.Property<string>("nomMarque")
                        .HasColumnType("text")
                        .HasColumnName("nommarque");

                    b.HasKey("idMarque")
                        .HasName("pk_marque");

                    b.ToTable("marque");

                    b.HasData(
                        new
                        {
                            idMarque = 1,
                            nomMarque = "Apple"
                        });
                });

            modelBuilder.Entity("TD1.Models.EntityFramework.Produit", b =>
                {
                    b.Property<int>("idProduit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idproduit");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idProduit"));

                    b.Property<string>("description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("idMarque")
                        .HasColumnType("integer")
                        .HasColumnName("idmarque");

                    b.Property<int>("idTypeProduit")
                        .HasColumnType("integer")
                        .HasColumnName("idtypeproduit");

                    b.Property<string>("nomPhoto")
                        .HasColumnType("text")
                        .HasColumnName("nomphoto");

                    b.Property<string>("nomProduit")
                        .HasColumnType("text")
                        .HasColumnName("nomproduit");

                    b.Property<int>("stockMax")
                        .HasColumnType("integer")
                        .HasColumnName("stockmax");

                    b.Property<int>("stockMin")
                        .HasColumnType("integer")
                        .HasColumnName("stockmin");

                    b.Property<int>("stockReel")
                        .HasColumnType("integer")
                        .HasColumnName("stockreel");

                    b.Property<string>("uriPhoto")
                        .HasColumnType("text")
                        .HasColumnName("uriphoto");

                    b.HasKey("idProduit")
                        .HasName("pk_produit");

                    b.HasIndex("idMarque");

                    b.HasIndex("idTypeProduit");

                    b.ToTable("produit");

                    b.HasData(
                        new
                        {
                            idProduit = 1,
                            description = "Iphone dernière génération.",
                            idMarque = 1,
                            idTypeProduit = 1,
                            nomPhoto = "photo1.jpg",
                            nomProduit = "Iphone 16 Pro Max",
                            stockMax = 200,
                            stockMin = 10,
                            stockReel = 100,
                            uriPhoto = "https://www.cdiscount.com/pdt2/a/t/u/1/700x700/ip16prom512natu/rw/apple-iphone-16-pro-max-512gb-natural-titanium.jpg"
                        },
                        new
                        {
                            idProduit = 2,
                            description = "Iphone avant dernière génération.",
                            idMarque = 1,
                            idTypeProduit = 1,
                            nomPhoto = "photo2.jpg",
                            nomProduit = "Iphone 15 Pro Max",
                            stockMax = 100,
                            stockMin = 5,
                            stockReel = 50,
                            uriPhoto = "https://static.fnac-static.com/multimedia/Images/FR/MDM/34/f1/52/22212916/1540-1/tsp20240918073442/Apple-iPhone-15-Pro-Max-6-7-5G-Double-SIM-256-Go-Bleu-Titanium.jpg"
                        },
                        new
                        {
                            idProduit = 3,
                            description = "Iphone avant avant dernière génération.",
                            idMarque = 1,
                            idTypeProduit = 1,
                            nomPhoto = "photo2.jpg",
                            nomProduit = "Iphone 14 Pro Max",
                            stockMax = 100,
                            stockMin = 5,
                            stockReel = 50,
                            uriPhoto = "https://m.media-amazon.com/images/I/71yzJoE7WlL.__AC_SX300_SY300_QL70_ML2_.jpg"
                        },
                        new
                        {
                            idProduit = 4,
                            description = "Apple watch dernière génération.",
                            idMarque = 1,
                            idTypeProduit = 2,
                            nomPhoto = "photo2.jpg",
                            nomProduit = "Apple Watch S10",
                            stockMax = 100,
                            stockMin = 5,
                            stockReel = 50,
                            uriPhoto = "https://www.cdiscount.com/pdt2/l/s/m/1/700x700/wat10cel46silsm/rw/apple-watch-series-10-gps-cellular-46mm-boit.jpg"
                        });
                });

            modelBuilder.Entity("TD1.Models.EntityFramework.TypeProduit", b =>
                {
                    b.Property<int>("idTypeProduit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idtypeproduit");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idTypeProduit"));

                    b.Property<string>("nomTypeProduit")
                        .HasColumnType("text")
                        .HasColumnName("nomtypeproduit");

                    b.HasKey("idTypeProduit")
                        .HasName("pk_typeproduit");

                    b.ToTable("typeproduit");

                    b.HasData(
                        new
                        {
                            idTypeProduit = 1,
                            nomTypeProduit = "Téléphone"
                        },
                        new
                        {
                            idTypeProduit = 2,
                            nomTypeProduit = "Montre connecté"
                        });
                });

            modelBuilder.Entity("TD1.Models.EntityFramework.Produit", b =>
                {
                    b.HasOne("TD1.Models.EntityFramework.Marque", "MarqueNavigation")
                        .WithMany("Produits")
                        .HasForeignKey("idMarque")
                        .IsRequired()
                        .HasConstraintName("fk_produit_marque");

                    b.HasOne("TD1.Models.EntityFramework.TypeProduit", "TypeProduitNavigation")
                        .WithMany("Produits")
                        .HasForeignKey("idTypeProduit")
                        .IsRequired()
                        .HasConstraintName("fk_produit_typeproduit");

                    b.Navigation("MarqueNavigation");

                    b.Navigation("TypeProduitNavigation");
                });

            modelBuilder.Entity("TD1.Models.EntityFramework.Marque", b =>
                {
                    b.Navigation("Produits");
                });

            modelBuilder.Entity("TD1.Models.EntityFramework.TypeProduit", b =>
                {
                    b.Navigation("Produits");
                });
#pragma warning restore 612, 618
        }
    }
}
